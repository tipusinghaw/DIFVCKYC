---
import "../global/global.css";

interface Props {
  title: string;
  noNavbar?: boolean;
}

const { title, noNavbar } = Astro.props;

const initData: any = {};

const envKeys: string[] = [
  ...Object.keys(process.env),
  ...Object.keys(import.meta.env),
];

envKeys.forEach((item: string) => {
  initData[item] = process.env[item] || import.meta.env[item];
});

let globalThis: any = {};
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=MedievalSharp&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Berkshire+Swash&family=Inter:wght@500&display=swap"
      rel="stylesheet"
    />

    <title>{title}</title>
  </head>
  <body class="bg-gray-50 overflow-x-hidden">
    <div class="flex flex-col justify-between" style="height: 100vh; width: 100vw;">
        <slot />
      <div class="mt-auto">
      </div>
    </div>
  </body>
</html>

<script define:vars={{ initData, envKeys }}>
  envKeys.forEach((item) => {
    globalThis[item] = initData[item];
  });
</script>
